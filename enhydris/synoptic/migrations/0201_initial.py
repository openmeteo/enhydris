# Generated by Django 3.2.13 on 2022-10-23 09:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("enhydris", "0118_aggregate_and_synoptic"),
    ]

    operations = [
        migrations.CreateModel(
            name="SynopticGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "slug",
                    models.SlugField(
                        help_text="Identifier to be used in URL", unique=True
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        choices=[
                            ("Etc/GMT", "UTC"),
                            ("Etc/GMT+1", "UTC-1"),
                            ("Etc/GMT+2", "UTC-2"),
                            ("Etc/GMT+3", "UTC-3"),
                            ("Etc/GMT+4", "UTC-4"),
                            ("Etc/GMT+5", "UTC-5"),
                            ("Etc/GMT+6", "UTC-6"),
                            ("Etc/GMT+7", "UTC-7"),
                            ("Etc/GMT+8", "UTC-8"),
                            ("Etc/GMT+9", "UTC-9"),
                            ("Etc/GMT+10", "UTC-10"),
                            ("Etc/GMT+11", "UTC-11"),
                            ("Etc/GMT+12", "UTC-12"),
                            ("Etc/GMT-1", "UTC+1"),
                            ("Etc/GMT-2", "UTC+2"),
                            ("Etc/GMT-3", "UTC+3"),
                            ("Etc/GMT-4", "UTC+4"),
                            ("Etc/GMT-5", "UTC+5"),
                            ("Etc/GMT-6", "UTC+6"),
                            ("Etc/GMT-7", "UTC+7"),
                            ("Etc/GMT-8", "UTC+8"),
                            ("Etc/GMT-9", "UTC+9"),
                            ("Etc/GMT-10", "UTC+10"),
                            ("Etc/GMT-11", "UTC+11"),
                            ("Etc/GMT-12", "UTC+12"),
                            ("Etc/GMT-13", "UTC+13"),
                            ("Etc/GMT-14", "UTC+14"),
                        ],
                        default="Etc/GMT",
                        max_length=50,
                        verbose_name="Time zone",
                    ),
                ),
                (
                    "fresh_time_limit",
                    models.DurationField(
                        help_text=(
                            "Maximum time that may have elapsed for the data to be "
                            "considered fresh. For data older than this the date on "
                            "the map shows red; for fresh data it shows green. Specify "
                            "it in seconds or in the format 'DD HH:MM:SS'."
                        )
                    ),
                ),
            ],
            options={
                "db_table": "enhydris_synoptic_synopticgroup",
            },
        ),
        migrations.CreateModel(
            name="SynopticGroupStation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField()),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris.station",
                    ),
                ),
                (
                    "synoptic_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="synoptic.synopticgroup",
                    ),
                ),
            ],
            options={
                "db_table": "enhydris_synoptic_synopticgroupstation",
                "ordering": ["synoptic_group", "order"],
            },
        ),
        migrations.CreateModel(
            name="SynopticTimeseriesGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField()),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text=(
                            "Used as the chart title and as the time series title in "
                            "the report. Time series in different stations with the "
                            "same title will show as a layer on the map. Leave empty "
                            "to use the time series name."
                        ),
                        max_length=50,
                    ),
                ),
                (
                    "low_limit",
                    models.FloatField(
                        blank=True,
                        help_text=(
                            "If the variable goes lower than this, it will be shown "
                            "red on the map."
                        ),
                        null=True,
                    ),
                ),
                (
                    "high_limit",
                    models.FloatField(
                        blank=True,
                        help_text=(
                            "If the variable goes higher than this, it will be shown "
                            "red on the map."
                        ),
                        null=True,
                    ),
                ),
                (
                    "subtitle",
                    models.CharField(
                        blank=True,
                        help_text=(
                            "If time series are grouped, this is shows in the legend "
                            "of the chart and in the report, in brackets."
                        ),
                        max_length=50,
                    ),
                ),
                (
                    "default_chart_min",
                    models.FloatField(
                        blank=True,
                        help_text=(
                            "Minimum value of the y axis of the chart. If the variable "
                            "goes lower, the chart will automatically expand. If "
                            "empty, the chart will always expand just enough to "
                            "accomodate the value."
                        ),
                        null=True,
                    ),
                ),
                (
                    "default_chart_max",
                    models.FloatField(
                        blank=True,
                        help_text=(
                            "Maximum value of the y axis of the chart. If the variable "
                            "goes lower, the chart will automatically expand. If "
                            "empty, the chart will always expand just enough to "
                            "accomodate the value."
                        ),
                        null=True,
                    ),
                ),
                (
                    "symmetric_rocc",
                    models.BooleanField(
                        default=False,
                        help_text=(
                            "If this is selected, it is the absolute value of the "
                            "change that matters, not its direction. In this case, "
                            "the allowed differences must all be positive. If it's "
                            "not selected, only rates larger than a positive or "
                            "smaller than a negative difference are considered."
                        ),
                        verbose_name="Symmetric",
                    ),
                ),
                (
                    "group_with",
                    models.ForeignKey(
                        blank=True,
                        help_text=(
                            "Specify this field if you want to group this time series "
                            "with another in the same chart and in the report."
                        ),
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="synoptic.synoptictimeseriesgroup",
                    ),
                ),
                (
                    "synoptic_group_station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="synoptic.synopticgroupstation",
                    ),
                ),
                (
                    "timeseries_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris.timeseriesgroup",
                    ),
                ),
            ],
            options={
                "db_table": "enhydris_synoptic_synoptictimeseriesgroup",
                "ordering": ["synoptic_group_station", "order"],
                "unique_together": {
                    ("synoptic_group_station", "timeseries_group"),
                    ("synoptic_group_station", "order"),
                },
            },
        ),
        migrations.AddField(
            model_name="synopticgroupstation",
            name="timeseries_groups",
            field=models.ManyToManyField(
                through="synoptic.SynopticTimeseriesGroup",
                to="enhydris.TimeseriesGroup",
            ),
        ),
        migrations.AddField(
            model_name="synopticgroup",
            name="stations",
            field=models.ManyToManyField(
                through="synoptic.SynopticGroupStation", to="enhydris.Station"
            ),
        ),
        migrations.CreateModel(
            name="RateOfChangeThreshold",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delta_t", models.CharField(max_length=6)),
                ("allowed_diff", models.FloatField()),
                (
                    "synoptic_timeseries_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="synoptic.synoptictimeseriesgroup",
                    ),
                ),
            ],
            options={
                "db_table": "enhydris_synoptic_rateofchangethreshold",
            },
        ),
        migrations.CreateModel(
            name="EarlyWarningEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "synoptic_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="synoptic.synopticgroup",
                    ),
                ),
            ],
            options={
                "db_table": "enhydris_synoptic_earlywarningemail",
                "verbose_name": "Email address to send early warnings",
                "verbose_name_plural": "Where to send early warnings",
            },
        ),
        migrations.AlterUniqueTogether(
            name="synopticgroupstation",
            unique_together={("synoptic_group", "order")},
        ),
    ]
