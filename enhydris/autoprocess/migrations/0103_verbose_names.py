# Generated by Django 2.2.17 on 2020-12-01 10:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("autoprocess", "0102_rateofchangecheck"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="aggregation",
            options={
                "verbose_name": "Aggregation",
                "verbose_name_plural": "Aggregations",
            },
        ),
        migrations.AlterModelOptions(
            name="curveinterpolation",
            options={
                "verbose_name": "Curve interpolation",
                "verbose_name_plural": "Curve interpolations",
            },
        ),
        migrations.AlterModelOptions(
            name="curveperiod",
            options={
                "verbose_name": "Curve period",
                "verbose_name_plural": "Curve periods",
            },
        ),
        migrations.AlterModelOptions(
            name="rangecheck",
            options={
                "verbose_name": "Range check",
                "verbose_name_plural": "Range checks",
            },
        ),
        migrations.AlterModelOptions(
            name="rateofchangecheck",
            options={
                "verbose_name": "Time consistency check",
                "verbose_name_plural": "Time consistency checks",
            },
        ),
        migrations.AlterField(
            model_name="aggregation",
            name="max_missing",
            field=models.PositiveSmallIntegerField(
                default=0,
                help_text=(
                    "Defines what happens if some of the source records corresponding "
                    "to a destination record are missing. Suppose you are aggregating "
                    "ten-minute to hourly and for 23 January between 12:00 and 13:00 "
                    "there are only four nonempty records in the ten-minute time "
                    "series (instead of the usual six). If you set this to 1 or lower, "
                    "the hourly record for 23 January 13:00 will be empty; if 2 or "
                    "larger, the hourly value will be derived from the four values. "
                    "In the latter case, the MISS flag will also be set in the "
                    "resulting record."
                ),
                verbose_name="Max missing",
            ),
        ),
        migrations.AlterField(
            model_name="aggregation",
            name="method",
            field=models.CharField(
                choices=[
                    ("sum", "Sum"),
                    ("mean", "Mean"),
                    ("max", "Max"),
                    ("min", "Min"),
                ],
                max_length=4,
                verbose_name="Method",
            ),
        ),
        migrations.AlterField(
            model_name="aggregation",
            name="resulting_timestamp_offset",
            field=models.CharField(
                blank=True,
                help_text=(
                    'If the time step of the target time series is one day ("D") and '
                    'you set the resulting timestamp offset to "1min", the resulting '
                    "time stamps will be ending in 23:59.  This does not modify the "
                    "calculations; it only subtracts the specified offset from the "
                    "timestamp after the calculations have finished. Leave empty to "
                    "leave the timestamps alone."
                ),
                max_length=7,
                verbose_name="Resulting timestamp offset",
            ),
        ),
        migrations.AlterField(
            model_name="aggregation",
            name="target_time_step",
            field=models.CharField(
                help_text=(
                    'E.g. "10min", "H" (hourly), "D" (daily), "M" (monthly), "Y" '
                    "(yearly). More specifically, it's an optional number plus a unit, "
                    "with no space in between. The units available are min, H, D, M, Y."
                ),
                max_length=7,
                verbose_name="Target time step",
            ),
        ),
        migrations.AlterField(
            model_name="curveinterpolation",
            name="target_timeseries_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="enhydris.TimeseriesGroup",
                verbose_name="Target time series group",
            ),
        ),
        migrations.AlterField(
            model_name="curveperiod",
            name="end_date",
            field=models.DateField(verbose_name="End date"),
        ),
        migrations.AlterField(
            model_name="curveperiod",
            name="start_date",
            field=models.DateField(verbose_name="Start date"),
        ),
        migrations.AlterField(
            model_name="rangecheck",
            name="lower_bound",
            field=models.FloatField(verbose_name="Lower bound"),
        ),
        migrations.AlterField(
            model_name="rangecheck",
            name="soft_lower_bound",
            field=models.FloatField(
                blank=True, null=True, verbose_name="Soft lower bound"
            ),
        ),
        migrations.AlterField(
            model_name="rangecheck",
            name="soft_upper_bound",
            field=models.FloatField(
                blank=True, null=True, verbose_name="Soft upper bound"
            ),
        ),
        migrations.AlterField(
            model_name="rangecheck",
            name="upper_bound",
            field=models.FloatField(verbose_name="Upper bound"),
        ),
        migrations.AlterField(
            model_name="rateofchangecheck",
            name="symmetric",
            field=models.BooleanField(
                help_text=(
                    "If this is selected, it is the absolute value of the change that "
                    "matters, not its direction. In this case, the allowed differences "
                    "must all be positive. If it's not selected, only rates larger "
                    "than a positive or smaller than a negative difference are "
                    "considered."
                ),
                verbose_name="Symmetric",
            ),
        ),
    ]
